# Generated by Django 2.1.4 on 2019-01-11 18:49

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
        ('photolog', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='DefInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ph', models.CharField(blank=True, max_length=15, null=True, verbose_name='Телефон')),
                ('soc', models.CharField(max_length=200, verbose_name='Соцсеть')),
                ('email', models.EmailField(max_length=200, verbose_name='Почта')),
            ],
            options={
                'verbose_name': 'Основную информацию',
                'verbose_name_plural': 'Основная информация',
            },
        ),
        migrations.CreateModel(
            name='Materials',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos', verbose_name='Картинка')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('catalog', models.ManyToManyField(blank=True, to='photolog.Catalog', verbose_name='Каталоги')),
            ],
            options={
                'verbose_name': 'Материалы',
                'verbose_name_plural': 'Материалы',
            },
        ),
        migrations.CreateModel(
            name='MaterialsType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
            ],
            options={
                'verbose_name': 'Типы материалов',
                'verbose_name_plural': 'Тип материалов',
            },
        ),
        migrations.CreateModel(
            name='Partitions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Заголовок')),
                ('description', models.CharField(blank=True, max_length=160, null=True, verbose_name='Краткое описание')),
                ('keywords', models.CharField(blank=True, max_length=255, null=True, verbose_name='Ключевые слова')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('published', 'Опубликовано')], default='draft', max_length=10, verbose_name='Статус')),
                ('url', models.CharField(db_index=True, max_length=100, verbose_name='URL')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='cover', verbose_name='Обложка')),
                ('content', models.TextField(blank=True, verbose_name='Содержание')),
                ('template_name', models.CharField(blank=True, help_text="Пример: 'core/contact_page.html'", max_length=70, verbose_name='Имя шаблона')),
            ],
            options={
                'verbose_name': 'Страницы',
                'verbose_name_plural': 'Страницы',
                'ordering': ('url',),
            },
        ),
        migrations.CreateModel(
            name='StandardModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('article', models.CharField(max_length=10, unique=True, verbose_name='Артикул')),
                ('qdoors', models.SmallIntegerField(choices=[(2, '2'), (3, '3'), (4, '4')], default=2, verbose_name='Количество дверей')),
                ('type_case', models.CharField(choices=[('case', 'Корпусной'), ('built-in', 'Встроенный')], default='case', max_length=10, verbose_name='Тип корпуса')),
                ('angular', models.BooleanField(default=False, verbose_name='Угловой')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('height1', models.SmallIntegerField(default=2200, verbose_name='Высота от')),
                ('height2', models.SmallIntegerField(default=2400, verbose_name='Высота до')),
                ('width1', models.SmallIntegerField(default=1200, verbose_name='Ширина от')),
                ('width2', models.SmallIntegerField(default=2000, verbose_name='Ширина до')),
                ('depth', models.SmallIntegerField(default=600, verbose_name='Глубина')),
                ('materials', models.ManyToManyField(blank=True, to='core.Materials', verbose_name='Материалы')),
                ('phobj', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='photolog.PhotoObject', verbose_name='Фотообъект')),
            ],
            options={
                'verbose_name': 'Базовый шкаф',
                'verbose_name_plural': 'Базовые шкафы',
            },
        ),
        migrations.CreateModel(
            name='StandartDoors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Название')),
                ('article', models.CharField(max_length=10, unique=True, verbose_name='Артикул')),
                ('qdoors', models.SmallIntegerField(choices=[(2, '2'), (3, '3'), (4, '4')], default=2, verbose_name='Количество дверей')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('img', models.ImageField(blank=True, null=True, upload_to='doors', verbose_name='Картинка')),
                ('materials', models.ManyToManyField(blank=True, to='core.Materials', verbose_name='Материалы')),
            ],
            options={
                'verbose_name': 'Базовая дверь',
                'verbose_name_plural': 'Базовые двери',
            },
        ),
        migrations.AddField(
            model_name='materials',
            name='mattype',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.MaterialsType', verbose_name='Тип материалов'),
        ),
    ]
